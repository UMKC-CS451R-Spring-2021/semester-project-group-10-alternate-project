# Documentation can be found here https://swagger.io/docs/specification/about/
openapi: 3.0.0
info:
  title: Alternate Project Server API
  description: A list of endpoints for the frontend to use.
  version: 1.0.0
servers:
  - url: http://localhost:8080/api
tags:
  - name: "teachers"
    description: "Managing teachers"
paths:
  /teachers:
    post:
      tags:
        - "teachers"
      summary: Create a teacher
      required: true
      requestBody:
        content:
          application/json: 
            schema:
              $ref: '#/components/schemas/TeacherPost'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Teachers"
              example:
              - id: 5
                firstName: "Jane"
                finalized: false
                createdAt: "2021-04-17T02:55:56.798Z"
                updatedAt: "2021-04-17T02:55:56.798Z"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                message: Content can not be empty!
        '500':
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                message: Some error occured while creating the Teacher!
    get:
      tags:
        - "teachers"
      summary: Get all teachers
      parameters:
        - in: query
          name: firstName
          description: Filter teachers by firstName
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Teachers"
              example:
              - id: 1
                firstName: "Bob"
                finalized: false
                createdAt: "2021-04-17T02:55:56.798Z"
                updatedAt: "2021-04-17T02:55:56.798Z"
              - id: 2
                firstName: "Jill"
                finalized: false
                createdAt: "2021-04-17T02:55:56.798Z"
                updatedAt: "2021-04-17T02:55:56.798Z"
              - id: 3
                firstName: "Steven"
                finalized: false
                createdAt: "2021-04-17T02:55:56.798Z"
                updatedAt: "2021-04-17T02:55:56.798Z"
              - id: 4
                firstName: "Alex"
                finalized: false
                createdAt: "2021-04-17T02:55:56.798Z"
                updatedAt: "2021-04-17T02:55:56.798Z"
              - id: 5
                firstName: "Jane"
                finalized: false
                createdAt: "2021-04-17T02:55:56.798Z"
                updatedAt: "2021-04-17T02:55:56.798Z"
        '500':
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                message: Some error occured while creating the Teacher!
components:
  schemas:
    TeacherPost:
      type: object
      properties:
        firstName:
          type: string
          example: "Jane"
        lastName:
          type: string
          example: "Doe"
        finalized:
          type: boolean
          default: false     
    Teacher:
      type: object
      properties:
        id:
          type: int32
          example: 1
        firstName:
          type: string
          example: "Jane"
        lastName:
          type: string
          example: "Doe"
        finalized:
          type: boolean
          default: false
        tenured:
          type: boolean
          default: null
        notes:
          type: string
          default: null
        createdAt:
          type: string
          format: data-time
        updatedAt:
          type: string
          format: data-time
    Teachers:
      type: array
      items:
        $ref: "#/components/schemas/Teacher"
    ErrorResponse:
      type: object
      properties:
        message:
          type: string
